@charset 'utf-8';

@import 'settings';
@import 'foundation';
@import 'motion-ui';

@include foundation-global-styles;
//@include foundation-grid;
// @include foundation-flex-grid;
@include foundation-xy-grid-classes;
@include foundation-typography;
@include foundation-button;
@include foundation-forms;
// @include foundation-range-input;
@include foundation-accordion;
@include foundation-accordion-menu;
@include foundation-badge;
@include foundation-breadcrumbs;
@include foundation-button-group;
@include foundation-callout;
@include foundation-card;
@include foundation-close-button;
@include foundation-menu;
@include foundation-menu-icon;
@include foundation-drilldown-menu;
@include foundation-dropdown;
@include foundation-dropdown-menu;
@include foundation-responsive-embed;
@include foundation-label;
@include foundation-media-object;
// @include foundation-off-canvas;
@include foundation-orbit;
@include foundation-pagination;
@include foundation-progress-bar;
// @include foundation-progress-element;
// @include foundation-progress-element;
// @include foundation-meter-element;
@include foundation-slider;
@include foundation-sticky;
@include foundation-reveal;
@include foundation-switch;
@include foundation-table;
@include foundation-tabs;
@include foundation-thumbnail;
@include foundation-title-bar;
@include foundation-tooltip;
@include foundation-top-bar;
@include foundation-visibility-classes;
// @include foundation-float-classes;
@include foundation-flex-classes;

// @include foundation-prototype-classes;
@include motion-ui-transitions;
@include motion-ui-animations;

$background: #ecedee;
$container-background: white;
$border-radius: 4px;
$header-color: #006992;
$blue: #006992;
$green: #A7E8BD;
$purple: #674CAA;
$red: #F25F5C;
$input-background-invalid: white;
// $header-color: #3C4F76;
$grey: #2E3532;
$lightGrey: #6c716f;
@mixin box-shadow {
    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);
}

// BODY
body {
    background: #f5f6f6;
    font-family: 'Lato', sans-serif;
    -ms-overflow-style: none;
}

body::-webkit-scrollbar {
    display: none;
}

p {
    color: #50514F;
}

a {
    color: $grey;
    text-decoration: underline;
    font-weight: bold;
    font-family: 'Lato', san-serif;
}

a:hover {
    color: $lightGrey;
}

a:visited {
    color: $grey;
}

input[type="text"],
input[type="number"],
select,
textarea {
    border: 2px #d4d5d6 solid;
}

input[type="text"]:focus,
input[type="number"]:focus,
select:focus,
textarea:focus,
{
    border: 2px #C0C0C0 solid;
}

#all-entries-container #search-bar input[type='text']:focus {
    border: 2px #C0C0C0 solid;
    border-right: none;
}

// #all-entries-container #search-bar #search-bar-icon {
//     border: 2px #C0C0C0 solid !important;
//     border-left: none !important;
// }
// hide number input spinners
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

// could probably consolidate this somehow
input[type="text"],
[type="number"],
textarea {
    box-shadow: none;
    border-radius: $border-radius;
}

textarea {
    box-shadow: none;
}

// GLOBAL
.button {
    border-radius: $border-radius;
}

// NAV BAR
.top-bar {
    color: white;
    background-color: $purple;

    .top-bar-left {
        background-color: $purple;
    }

    ul {
        background-color: $purple;
    }

    a {
        color: white;
    }

    .dropdown.menu {
        color: white;
    }
}

// CONTAINERS
.all-container {
    background: none; // reminder: setting a container to display: flex turns it into a flex parent, 
    // allowing you to apply foundation flex utility classes
    flex-direction: column;
    width: 60%;
    padding: 2rem 1rem 2rem 1rem;
    border-radius: 4px;
    @include breakpoint(medium only) {
        width: 90%;
    }
    @include breakpoint(small only) {
        width: 100%;
        padding: 0;
    }
}

// CONTAINER HEADER
%header {
    color: $grey;
    background-color: white;
    font-size: 1.10rem;
    line-height: 1rem;
    height: 1rem;
    padding: 1.5rem 2rem 0.5rem 2rem;
    border-radius: $border-radius $border-radius 0 0;
    font-family: 'Lato';
    font-weight: bold;
    letter-spacing: 0.5px;
    position: relative;
    @include breakpoint(small only) {
        border-radius: 0;
    }
}

// CONTAINER HEADER (utilizes before so that box-shadow doesn't overlap)
%header-before {
    @include box-shadow;
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: -1;
    border-radius: $border-radius $border-radius 0 0;
    @include breakpoint(small only) {
        border-radius: 0;
    }
}




// NEW ENTRY
// in all honestly, I probably should've just used classes for the headers. initially, I toyed with the idea of
// giving each header different treatments, but that made no sense from a design perpective
#new-entry-header {
    @extend %header
}

#new-entry-header:before {
    @extend %header-before
}

// contains all goal-setting, project selection, and text input options
#words-container {
    width: 100%;
    background-color: $container-background;
    margin-bottom: 2rem;
    padding: 2rem 2rem 0.5rem 2rem;
    border-radius: 0 0 $border-radius $border-radius;
    @include box-shadow;
    @include breakpoint(small only) {
        border-radius: 0;
    }

    #project-name {
        margin-bottom: 2.5rem;
    }

    #goal-input {}

    #words-input {
        resize: none;
        margin-bottom: 0;
        min-height: 5em;
        max-height: 50rem;
        width: 100%;
    } // text area
    #word-input-container {
        position: relative;
    }

    #goal-display-container {
        text-align: right;
        margin-top: 0.5rem;
        cursor: pointer;
    }

    #goal-display {
        text-align: right;
        font-weight: 800;
    }

    #goal-display:hover {
        color: grey;
    } // class that hides unit counter
    .goal-display-hidden {
        opacity: 0;
    }

    .goal-display-hidden:hover {
        color: gray;
    } // checkmark icon that appears when goal is met
    #checkmark {
        transition: color 200ms;
        text-align: right;
    }

    .checkmark-unmet {
        color: grey;
    }

    .checkmark-met {
        color: $green;
    }

    .checkmark-hidden {
        opacity: 0;
    }
}

// buttons that set goal in characters, words, or paragraphs
#unit-button-group {

    .unit-button {
        border-radius: 2px;
        margin-right: 0;
        background-color: $green;
        color: $grey;
        font-weight: 600;
        letter-spacing: 0.5px;
        text-decoration: none;
    }

    .unit-button:hover {
        background-color: #96d0aa;
        color: white;
    }

    #characters-button {
        border-top-right-radius: 0px;
        border-bottom-right-radius: 0px;
    }

    #words-button {
        border-radius: 0px;
    }

    #paragraphs-button {
        border-top-left-radius: 0px;
        border-bottom-left-radius: 0px;
    }

    .active {
        background-color: #96d0aa;
        color: white;
    }
}

// PAST ENTRIES
#entries-header {
    @extend %header;
    height: 4rem;
    padding: 1.5rem 2rem 0.5rem 2rem;
    @include breakpoint(small only) {
        border-radius: 0;
    }
}

#entries-header:before {
    @extend %header-before;
}

// entries container
#entries-container {
    width: 100%;
    border-radius: 4px;
    background-color: $container-background;
    padding-left: 2rem;
    padding-right: 2rem;
    transition: all 800ms ease;
    overflow: hidden; // gives the container a bit of a spring when opening/closing
    transition-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
    @include box-shadow;
    border-radius: 0 0 $border-radius $border-radius;
    @include box-shadow;
    @include breakpoint(small only) {
        border-radius: 0;
    }
}

// individual entry
.entry {
    border-radius: 4px;
    background-color: white;
    border: 2px #d4d5d6 solid;
    cursor: pointer;
    font-size: 1rem;
    width: 100%;
    height: 14rem;
    line-height: 20px;
    transition: 200ms ease;
    position: relative;
    width: 100%;
    overflow: hidden;


    p {
        display: block;
        overflow-wrap: break-word;
        word-wrap: break-word;
        hyphens: auto;
        margin: 0 0.75rem;
        color: $grey;
    }

    .title {
        font-weight: bold;
        text-transform: uppercase;
        font-size: 0.9rem;
        margin-top: 1rem;
        margin-bottom: 0.1rem;
        line-height: 1.15rem;
    }

    .date {
        font-size: 0.7rem;
        color: #808080;
        text-transform: uppercase;
    }

    .teaser {
        font-size: 0.9rem;
        line-height: 1.25rem;
        margin-top: 1rem;
    }

    .goal-met {
        height: auto;
        color: white;
        background-color: #A7E8BD;
        position: absolute;
        bottom: 0;
        width: 100%;
        text-align: center;
        height: 2rem;
        line-height: 2rem;
        font-size: 0.8rem;
        font-weight: 900;
        font-family: 'Lato';
    }

    .goal-unmet {
        height: auto;
        color: white;
        background-color: #F25F5C;
        position: absolute;
        bottom: 0;
        width: 100%;
        text-align: center;
        height: 2rem;
        line-height: 2rem;
        font-size: 0.8rem;
        font-weight: 800;
        font-family: 'Lato';
    }
}

.entry:hover {
    transform: translateY(-5px);
    transition: 200ms ease;
}

.entry-met {
    border-color: #A7E8BD;
}

.entry-unmet {
    border-color: #F25F5C;
}

// styles for when entries container is open
.open-div {
    height: var(--fullHeight);
    padding-top: 0.5rem;
    padding-bottom: 2rem;
}

// styles for when entries container is closed
.closed-div {
    height: 0;
    padding-top: 0;
}

// save button 
.save {
    width: 100%;
    background-color: #674CAA;
    color: white;
    font-weight: bold;
    border-radius: 4px;
    margin-top: 1rem;
    margin-bottom: 1rem;
}

.save:hover,
.save:focus {
    background-color: #463474;
}

// MISC
.text-align-right {
    text-align: right;
}

.display-block {
    display: block;
}

.hide {
    display: none;
}

.show {
    display: block;
}

.scaleIn {
    // A long, long fade
    @include mui-zoom( $state: in,
    $from: 0.5,
    $to: 1,
    $fade: true,
    $duration: 200ms,
    $timing: ease);
}

.scaleOut {
    // A long, long fade
    @include mui-zoom( $state: out,
    $from: 1,
    $to: 0.5,
    $fade: true,
    $duration: 200ms,
    $timing: ease);
}

// PROFILE
#profile-header {
    @extend %header;
}

#profile-header:before {
    @extend %header-before;
}

#profile-container {
    width: 100%;
    background-color: $container-background;
    border-radius: 0 0 $border-radius $border-radius;
    padding: 2rem 2rem 0rem 2rem;
    margin-bottom: 2rem;
    overflow: auto;
    @include box-shadow;
    @include breakpoint(small only) {
        border-radius: 0;
    }
}

#profile-pic {
    width: 125px;
    height: 125px;
    position: relative;
    overflow: hidden;
    border-radius: 50%;
    border: 3px solid $purple;
    margin-bottom: 2rem;

    img {
        display: inline;
        margin: 0 auto;
        width: auto;
    }
}

#profile-pic-cell {
    @include breakpoint(small only) {
        justify-content: center;
    }
}

#stats-container {
    line-height: 1.5rem;
    text-align: left;
    margin-bottom: 2rem;
    @include breakpoint(small only) {
        text-align: center;
    }
}

// the cell that houses a stat
.stat-square {
    line-height: 1.25rem;
    margin-bottom: 0.5rem;
}

// small text above a number callout
.stats-header {
    color: $lightGrey;
    font-size: 0.75rem;
    line-height: 0.6rem;
}

// emphasises the number in a statistic
.number-callout {
    font-family: 'Lato', serif;
    font-size: 1.25rem;
    color: $blue;
    font-weight: bold;
}

// SETTINGS
#settings-header {
    @extend %header;
}

#settings-header:before {
    @extend %header-before;
}

#settings-container {
    width: 100%;
    background-color: white;
    margin-bottom: 2rem;
    padding: 2rem 2rem 0.5rem 2rem;
    border-radius: 0;
    overflow: auto;
    border-radius: 0 0 $border-radius $border-radius;
    @include box-shadow;
    @include breakpoint(small only) {
        border-radius: 0;
    }

    label {
        color: $grey;
    }

    select {
        border-radius: 4px;
        border: 2px solid #d4d5d6;
    }
}

// ALL ENTRIES PAGE
#all-entries-header {
    @extend %header;
}

#all-entries-header:before {
    @extend %header-before;
}

#all-entries-container {
    width: 100%;
    border-radius: 4px;
    background-color: $container-background;
    padding: 2rem 2rem 0.5rem 2rem;
    overflow: hidden;
    @include box-shadow;
    border-radius: 0 0 $border-radius $border-radius;
    @include box-shadow;
    @include breakpoint(small only) {
        border-radius: 0;
    }

    #search-bar {
        height: 39px;
        margin-bottom: 1.5rem;
        position: relative;

        input[type='text'] {
            border-radius: $border-radius 0 0 $border-radius;
            border: 2px solid #d4d5d6; // border-right: none;
        }

        #search-bar-icon {
            border-radius: 0 $border-radius $border-radius 0;
            border-left: none;
        }

        .search-bar-icon-unfocused {
            color: white;
            background-color: #d4d5d6;
            border: 2px solid #d4d5d6;
        }

        .search-bar-icon-focused {
            color: white;
            background-color: #C0C0C0;
            border: 2px solid #C0C0C0;
            box-shadow: 0 0 5px $medium-gray;
        }
    }
}

#all-entries-inner-container {
    overflow: auto;
    margin-bottom: 0.5rem;
}

#see-more {
    margin: 0.5rem 0;
}

// MODALS
.reveal {
    border-radius: $border-radius;
    border: 2px solid #d4d5d6;

    .content-title {
        color: $grey;
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 0;
    }

    .content-date {
        color: grey;
        font-size: 0.85rem;
        margin-bottom: 1.5rem;
    }

    .content-body {
        margin-bottom: 1rem;
        line-height: 1.4rem;
    }

    .content-project {
        color: grey;
        font-size: 0.85rem;
        margin-bottom: 1.5rem;
    }

    .content-goal {
        font-weight: 600;
        font-size: 0.9rem;
    }
}

// UTILITY CLASSES
.text-right {
    text-align: right;
}

.text-center {
    text-align: center;
}

.green {
    color: $green;
}

.red {
    color: $red;
}

.display-inline {
    display: inline;
}

.display-none {
    display: none;
}