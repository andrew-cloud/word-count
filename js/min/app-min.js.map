{"version":3,"sources":["../app.js"],"names":["refreshGoal","goal","goal_input","valueAsNumber","refreshWords","words","words_input","value","refreshCount","count","count_characters","characterCount","count_words","wordCount","paragraphCount","s","replace","split","length","setToWords","count_paragraphs","refreshGoalDisplay","goalMetAlert","setToCharacters","setToParagraphs","calculatePercentage","percentage_complete","isGoalMet","console","log","checkmark","classList","remove","add","goalFirstClick","e","goal_clicked","this","select","unitButtonActive","removeActiveUnitButton","contains","list","document","getElementsByClassName","i","getElementById","innerHTML","refreshAll","hide","style","display","hideCounter","toggleFullscreen","$","foundation","goal_display","goal_display_container","entries","querySelectorAll","test_entry","addEventListener"],"mappings":"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","file":"app-min.js","sourcesContent":["$(document).foundation();\n\n\n// inputted words variable\nlet words = \"\";\n// word count variable\nlet count = 0;\n// goal variable\nlet goal = 250;\n// goal input\nlet goal_input = document.getElementById(\"goal-input\");\n// goal-display\nlet goal_display = document.getElementById(\"goal-display\");\n// has the goal input been clicked before?\nlet goal_clicked = false;\n// word input\nlet words_input = document.getElementById(\"words-input\");\n// character count boolean\nlet count_characters = false;\n// word count boolean, true by default\nlet count_words = true;\n// paragraph count boolean\nlet count_paragraphs = false;\n// percentage of goal complete\nlet percentage_complete = 0;\n// checkmark\nlet checkmark = document.getElementById(\"checkmark\");\n// goal-display with icon\nlet goal_display_container = document.getElementById(\"goal-display-container\");\n// all entires\nvar entries = document.querySelectorAll('.entry');\n\n// test entry\nlet test_entry = document.getElementById(\"test-entry\");\n\n\n// gets goal number from input field\nfunction refreshGoal() {\n    goal = goal_input.valueAsNumber;\n}\n\n// gets inputted words form text area\nfunction refreshWords() {\n    words = words_input.value;\n}\n\n// refreshes word count\nfunction refreshCount() {\n    if (count_characters == true) {\n        count = characterCount(words);\n    } else if (count_words == true) {\n        count = wordCount(words);\n    } else {\n        count = paragraphCount(words);\n    }\n}\n\n// word count\nfunction wordCount(s) {\n    s = s.replace(/(^\\s*)|(\\s*$)/gi, \"\"); //exclude  start and end white-space\n    s = s.replace(/[ ]{2,}/gi, \" \"); // 2 or more spaces to 1\n    s = s.replace(/\\n /, \"\\n\"); // exclude newline with a start spacing\n    if (words == \"\") {\n        return 0;\n    } else {\n        return s.split(' ').length;\n    }\n}\n\n// character count\nfunction characterCount(s) {\n    s = s.replace(/\\s/g, \"\");\n    return s.length;\n}\n\n// paragraph count\nfunction paragraphCount(s) {\n    s = s.replace(/\\n$/gm, '');\n    if (words == \"\") {\n        return 0;\n    } else {\n        return s.split(/\\n/).length;\n    }\n}\n\n// set count to words\nfunction setToWords() {\n    count_words = true;\n    count_characters = false;\n    count_paragraphs = false;\n    refreshCount();\n    refreshGoalDisplay();\n    goalMetAlert();\n}\n\n// set count to characters\nfunction setToCharacters() {\n    count_words = false;\n    count_characters = true;\n    count_paragraphs = false;\n    refreshCount();\n    refreshGoalDisplay();\n    goalMetAlert();\n}\n\n// set count to paragraphs\nfunction setToParagraphs() {\n    count_words = false;\n    count_characters = false;\n    count_paragraphs = true;\n    refreshCount();\n    refreshGoalDisplay();\n    goalMetAlert();\n}\n\n// calculate percentage complete\nfunction calculatePercentage() {\n\tpercentage_complete = count/goal;\n}\n\n// checks to see if goal is met\nfunction isGoalMet() {\n    return (count >= goal);\n}\n\n// changes color of text when goal is met\nfunction goalMetAlert() {\n    if ((isGoalMet()) & (goal != 0)) {\n        console.log(\"Goal is met!\")\n        // have to run refreshCounter because the inner html has to be refreshed\n        refreshGoalDisplay();\n        checkmark.classList.remove(\"checkmark-unmet\");\n        checkmark.classList.add(\"checkmark-met\");\n    } else {\n    \trefreshGoalDisplay();\n        checkmark.classList.remove(\"checkmark-met\");\n        checkmark.classList.add(\"checkmark-unmet\");\n    }\n}\n\nfunction goalFirstClick(e) {\n\tif (goal_clicked == false) {\n\t\tthis.select();\n\t}\n\tgoal_clicked = true;\n\t\n}\n\n// applies active class to unit buttons\nfunction unitButtonActive() {\n    removeActiveUnitButton();\n    if (this.classList.contains(\"active\")) {\n        this.classList.remove(\"active\");\n    } else this.classList.add(\"active\");\n}\n\n// remove active class from unit buttons\nfunction removeActiveUnitButton() {\n    var list = document.getElementsByClassName(\"active\");\n    var i;\n    for (i = 0; i < list.length; i++) {\n        list[i].classList.remove(\"active\");\n    }\n}\n\n\n\n// button click - set count to words\ndocument.getElementById(\"words-button\").addEventListener(\"click\", setToWords);\n\n// button click - set count to words\ndocument.getElementById(\"characters-button\").addEventListener(\"click\", setToCharacters);\n\n// button click - set count to words\ndocument.getElementById(\"paragraphs-button\").addEventListener(\"click\", setToParagraphs);\n\n\n\n// refresh displayed count\nfunction refreshGoalDisplay() {\n    document.getElementById(\"goal-display\").innerHTML = `${count}/${goal}`;\n}\n\n// hide goal-display\ngoal_display.addEventListener(\"click\", hideCounter);\n\n// refreshes all values (inputted words, inputted goal, inputted goal display, and checks if goal is met)\nfunction refreshAll() {\n\trefreshWords();\n\trefreshCount();\n\trefreshGoalDisplay();\n\tgoalMetAlert();\n}\n\n// refreshes values after input\ndocument.addEventListener(\"keyup\", refreshAll);\n\n// refreshed goal in goal-display when new amount is entered\ndocument.getElementById(\"goal-input\").addEventListener(\"input\", refreshGoal);\n\n// add comment\ngoal_input.addEventListener(\"click\", goalFirstClick);\n\n// adds active class to unit buttons\ndocument.getElementById(\"characters-button\").addEventListener(\"click\", unitButtonActive);\ndocument.getElementById(\"words-button\").addEventListener(\"click\", unitButtonActive);\ndocument.getElementById(\"paragraphs-button\").addEventListener(\"click\", unitButtonActive);\n\n// hide method\nfunction hide() {\n    if (this.style.display = \"block\") {\n        this.style.display = \"none\";\n    } else this.style.display = \"block\";\n}\n\n// hides counter\nfunction hideCounter() {\n    if (this.classList.contains(\"goal-display-hidden\")) {\n        this.classList.remove(\"goal-display-hidden\");\n    } else this.classList.add(\"goal-display-hidden\");\n}\n\n// ENTRIES\n\n// applies active class to unit buttons\nfunction toggleFullscreen(){\n    if (this.classList.contains(\"fullscreen\")) {\n        this.classList.remove(\"fullscreen\");\n    } else this.classList.add(\"fullscreen\");\n}\n\ntest_entry.addEventListener(\"click\", toggleFullscreen);\n\n"]}