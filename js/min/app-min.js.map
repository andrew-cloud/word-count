{"version":3,"sources":["../app.js"],"names":["refreshGoal","goal","goal_input","valueAsNumber","refreshWords","words","words_input","value","refreshCount","count","count_characters","characterCount","count_words","wordCount","paragraphCount","s","replace","split","length","setToWords","count_paragraphs","refreshGoalDisplay","goalMetAlert","setToCharacters","setToParagraphs","calculatePercentage","percentage_complete","isGoalMet","console","log","checkmark","classList","remove","add","goalFirstClick","e","goal_clicked","this","select","unitButtonActive","removeActiveUnitButton","contains","list","document","getElementsByClassName","i","getElementById","innerHTML","refreshAll","autoExpand","hide","style","display","hideCounter","hideDiv","entries_container","generateTeaser","teaser","substring","trim","createEntry","newEntryCell","createElement","className","newEntryDiv","setAttribute","newEntryTitle","newEntryDate","newEntryTeaser","entries_container_inner","appendChild","options","AnimationIn","AnimationOut","modal","Foundation","Reveal","$","foundation","goal_display","goal_display_container","save_button","entries","querySelectorAll","test_entry","close_entries_link","entries_container_height","clientHeight","body","addEventListener","field","height","computed","window","getComputedStyle","parseInt","getPropertyValue","scrollHeight","setProperty"],"mappings":"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","file":"app-min.js","sourcesContent":["$(document).foundation();\n\n\n// inputted words variable\nlet words = \"\";\n// word count variable\nlet count = 0;\n// goal variable\nlet goal = 250;\n// goal input\nlet goal_input = document.getElementById(\"goal-input\");\n// goal-display\nlet goal_display = document.getElementById(\"goal-display\");\n// has the goal input been clicked before?\nlet goal_clicked = false;\n// word input\nlet words_input = document.getElementById(\"words-input\");\n// character count boolean\nlet count_characters = false;\n// word count boolean, true by default\nlet count_words = true;\n// paragraph count boolean\nlet count_paragraphs = false;\n// percentage of goal complete\nlet percentage_complete = 0;\n// checkmark\nlet checkmark = document.getElementById(\"checkmark\");\n// goal-display with icon\nlet goal_display_container = document.getElementById(\"goal-display-container\");\n//save button\nlet save_button = document.getElementById(\"save-button\");\n// all entires\nvar entries = document.querySelectorAll('.entry');\n// entries container\nvar entries_container = document.getElementById(\"entries-container\");\n//entries-container-inner \nvar entries_container_inner = document.getElementById(\"entries-container-inner\");\n// test entry\nlet test_entry = document.getElementById(\"test-entry\");\n// close entries link\nlet close_entries_link = document.getElementById(\"close-entries-link\");\n// entries container height\nlet entries_container_height = entries_container.clientHeight;\n// body\nlet body = document.body;\n\n\n// gets goal number from input field\nfunction refreshGoal() {\n    goal = goal_input.valueAsNumber;\n}\n\n// gets inputted words form text area\nfunction refreshWords() {\n    words = words_input.value;\n}\n\n// refreshes word count\nfunction refreshCount() {\n    if (count_characters == true) {\n        count = characterCount(words);\n    } else if (count_words == true) {\n        count = wordCount(words);\n    } else {\n        count = paragraphCount(words);\n    }\n}\n\n// word count\nfunction wordCount(s) {\n    s = s.replace(/(^\\s*)|(\\s*$)/gi, \"\"); //exclude  start and end white-space\n    s = s.replace(/[ ]{2,}/gi, \" \"); // 2 or more spaces to 1\n    s = s.replace(/\\n /, \"\\n\"); // exclude newline with a start spacing\n    if (words == \"\") {\n        return 0;\n    } else {\n        return s.split(' ').length;\n    }\n}\n\n// character count\nfunction characterCount(s) {\n    s = s.replace(/\\s/g, \"\");\n    return s.length;\n}\n\n// paragraph count\nfunction paragraphCount(s) {\n    s = s.replace(/\\n$/gm, '');\n    if (words == \"\") {\n        return 0;\n    } else {\n        return s.split(/\\n/).length;\n    }\n}\n\n// set count to words\nfunction setToWords() {\n    count_words = true;\n    count_characters = false;\n    count_paragraphs = false;\n    refreshCount();\n    refreshGoalDisplay();\n    goalMetAlert();\n}\n\n// set count to characters\nfunction setToCharacters() {\n    count_words = false;\n    count_characters = true;\n    count_paragraphs = false;\n    refreshCount();\n    refreshGoalDisplay();\n    goalMetAlert();\n}\n\n// set count to paragraphs\nfunction setToParagraphs() {\n    count_words = false;\n    count_characters = false;\n    count_paragraphs = true;\n    refreshCount();\n    refreshGoalDisplay();\n    goalMetAlert();\n}\n\n// calculate percentage complete\nfunction calculatePercentage() {\n    percentage_complete = count / goal;\n}\n\n// checks to see if goal is met\nfunction isGoalMet() {\n    return (count >= goal);\n}\n\n// changes color of text when goal is met\nfunction goalMetAlert() {\n    if ((isGoalMet()) & (goal != 0)) {\n        console.log(\"Goal is met!\")\n        // have to run refreshCounter because the inner html has to be refreshed\n        refreshGoalDisplay();\n        checkmark.classList.remove(\"checkmark-unmet\");\n        checkmark.classList.add(\"checkmark-met\");\n    } else {\n        refreshGoalDisplay();\n        checkmark.classList.remove(\"checkmark-met\");\n        checkmark.classList.add(\"checkmark-unmet\");\n    }\n}\n\nfunction goalFirstClick(e) {\n    if (goal_clicked == false) {\n        this.select();\n    }\n    goal_clicked = true;\n\n}\n\n// applies active class to unit buttons\nfunction unitButtonActive() {\n    removeActiveUnitButton();\n    if (this.classList.contains(\"active\")) {\n        this.classList.remove(\"active\");\n    } else this.classList.add(\"active\");\n}\n\n// remove active class from unit buttons\nfunction removeActiveUnitButton() {\n    var list = document.getElementsByClassName(\"active\");\n    var i;\n    for (i = 0; i < list.length; i++) {\n        list[i].classList.remove(\"active\");\n    }\n}\n\n\n\n// button click - set count to words\ndocument.getElementById(\"words-button\").addEventListener(\"click\", setToWords);\n\n// button click - set count to words\ndocument.getElementById(\"characters-button\").addEventListener(\"click\", setToCharacters);\n\n// button click - set count to words\ndocument.getElementById(\"paragraphs-button\").addEventListener(\"click\", setToParagraphs);\n\n\n\n// refresh displayed count\nfunction refreshGoalDisplay() {\n    document.getElementById(\"goal-display\").innerHTML = `${count}/${goal}`;\n}\n\n// hide goal-display\ngoal_display.addEventListener(\"click\", hideCounter);\n\n// refreshes all values (inputted words, inputted goal, inputted goal display, and checks if goal is met)\nfunction refreshAll() {\n    refreshWords();\n    refreshCount();\n    refreshGoalDisplay();\n    goalMetAlert();\n    autoExpand(words_input);\n}\n\n// refreshes values after input\ndocument.addEventListener(\"keyup\", refreshAll);\n\n// refreshed goal in goal-display when new amount is entered\ndocument.getElementById(\"goal-input\").addEventListener(\"input\", refreshGoal);\n\n// add comment\ngoal_input.addEventListener(\"click\", goalFirstClick);\n\n// adds active class to unit buttons\ndocument.getElementById(\"characters-button\").addEventListener(\"click\", unitButtonActive);\ndocument.getElementById(\"words-button\").addEventListener(\"click\", unitButtonActive);\ndocument.getElementById(\"paragraphs-button\").addEventListener(\"click\", unitButtonActive);\n\n// hide method\nfunction hide() {\n    if (this.style.display = \"block\") {\n        this.style.display = \"none\";\n    } else this.style.display = \"block\";\n}\n\n// hides counter\nfunction hideCounter() {\n    if (this.classList.contains(\"goal-display-hidden\")) {\n        this.classList.remove(\"goal-display-hidden\");\n    } else this.classList.add(\"goal-display-hidden\");\n}\n\nvar autoExpand = function (field) {\n\n\t// Reset field height\n\tfield.style.height = 'inherit';\n\n\t// Get the computed styles for the element\n\tvar computed = window.getComputedStyle(field);\n\n\t// Calculate the height\n\tvar height = parseInt(computed.getPropertyValue('border-top-width'), 10)\n\t             + parseInt(computed.getPropertyValue('padding-top'), 10)\n\t             + field.scrollHeight\n\t             + parseInt(computed.getPropertyValue('padding-bottom'), 10)\n\t             + parseInt(computed.getPropertyValue('border-bottom-width'), 10);\n\n\tfield.style.height = height + 'px';\n\n};\n\n// ENTRIES\n\nentries_container.style.setProperty(\"--fullHeight\", entries_container.clientHeight + \"px\");\n\n\nclose_entries_link.addEventListener(\"click\", hideDiv);\n\nfunction hideDiv() {\n    if (entries_container.classList.contains(\"open-div\")) {\n        entries_container.classList.remove(\"open-div\");\n        entries_container.classList.add(\"closed-div\");\n    } else {\n        entries_container.classList.remove(\"closed-div\");\n        entries_container.classList.add(\"open-div\");\n    }\n}\n\n\nsave_button.addEventListener(\"click\", createEntry);\n\nfunction generateTeaser(s) {\n\tlet teaser = s.substring(0,56) + \"...\";\n\tteaser.trim();\n\treturn teaser;\n}\n\nfunction createEntry() {\n\tlet newEntryCell = document.createElement(\"div\");\n\tnewEntryCell.className = \"large-3 medium-6 small-12 cell\";\n\t\n\tlet newEntryDiv = document.createElement(\"div\");\n\tnewEntryDiv.className = \"entry\";\n\tnewEntryDiv.setAttribute(\"data-open\", \"exampleModal1\");\n\t\n\tlet newEntryTitle = document.createElement(\"p\");\n\tnewEntryTitle.className = \"title\";\n\tnewEntryTitle.innerHTML = \"Title\";\n\t\n\tlet newEntryDate = document.createElement(\"p\");\n\tnewEntryDate.className = \"\";\n\tnewEntryDate.innerHTML = \"Jan 1, 18\";\n\t\n\tlet newEntryTeaser = document.createElement(\"p\");\n\tnewEntryTeaser.className = \"teaser\";\n\tnewEntryTeaser.innerHTML = generateTeaser(words);\n\n\tentries_container_inner.appendChild(newEntryCell).appendChild(newEntryDiv).appendChild(newEntryTitle);\n\tnewEntryDiv.appendChild(newEntryDate);\n\tnewEntryDiv.appendChild(newEntryTeaser);\n\n\tlet options = {\n\t\tAnimationIn: \"scaleIn\",\n\t\tAnimationOut: \"scaleOut\"\n\t};\n\tlet modal = new Foundation.Reveal( $('#exampleModal1'), options);\n\t$(document).foundation();\n\tconsole.log(modal);\n\n\n}"]}