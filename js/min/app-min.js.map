{"version":3,"sources":["../app.js"],"names":["refreshGoal","goal","goal_input","valueAsNumber","refreshWords","words","document","getElementById","value","refreshCount","count","countByCharacters","characterCount","countByWords","wordCount","paragraphCount","s","replace","split","length","setToWords","countByParagraphs","refreshCounter","goalMetAlert","setToCharacters","setToParagraphs","isGoalMet","console","log","classList","add","remove","innerHTML","hide","this","style","display","hideCounter","contains","$","foundation","unit_counter","addEventListener"],"mappings":"YAsBA,SAASA,eACLC,KAAOC,WAAWC,cAItB,QAASC,gBACLC,MAAQC,SAASC,eAAe,eAAeC,MAInD,QAASC,gBAEDC,MADqB,GAArBC,kBACQC,eAAeP,OACA,GAAhBQ,aACCC,UAAUT,OAEVU,eAAeV,OAK/B,QAASS,WAAUE,GAIf,MAHAA,GAAIA,EAAEC,QAAQ,kBAAmB,IACjCD,EAAIA,EAAEC,QAAQ,YAAa,KAC3BD,EAAIA,EAAEC,QAAQ,MAAO,MACR,IAATZ,MACO,EAEAW,EAAEE,MAAM,KAAKC,OAK5B,QAASP,gBAAeI,GAEpB,MADAA,GAAIA,EAAEC,QAAQ,MAAO,IACdD,EAAEG,OAIb,QAASJ,gBAAeC,GAEpB,MADAA,GAAIA,EAAEC,QAAQ,QAAS,IACV,IAATZ,MACO,EAEAW,EAAEE,MAAM,MAAMC,OAK7B,QAASC,cACLP,cAAe,EACfF,mBAAoB,EACpBU,mBAAoB,EAEpBZ,eACAa,iBACAC,eAIJ,QAASC,mBACLX,cAAe,EACfF,mBAAoB,EACpBU,mBAAoB,EAEpBZ,eACAa,iBACAC,eAIJ,QAASE,mBACLZ,cAAe,EACfF,mBAAoB,EACpBU,mBAAoB,EAEpBZ,eACAa,iBACAC,eAIJ,QAASG,aACL,MAAQhB,QAAST,KAIrB,QAASsB,gBACAG,YAAwB,GAARzB,MACjB0B,QAAQC,IAAI,gBACZtB,SAASC,eAAe,eAAesB,UAAUC,IAAI,iBAErDxB,SAASC,eAAe,eAAesB,UAAUE,OAAO,gBAkBhE,QAAST,kBACLhB,SAASC,eAAe,gBAAgByB,UAAetB,MAAvD,IAAgET,KAcpE,QAASgC,SACDC,KAAKC,MAAMC,QAAU,SACrBF,KAAKC,MAAMC,QAAU,OAClBF,KAAKC,MAAMC,QAAU,QAIhC,QAASC,eACDH,KAAKL,UAAUS,SAAS,uBACxBJ,KAAKL,UAAUE,OAAO,uBACnBG,KAAKL,UAAUC,IAAI,uBA7J9BS,EAAEjC,UAAUkC,YAIZ,IAAInC,OAAQ,GAERK,MAAQ,EAERT,KAAO,EAEPC,WAAaI,SAASC,eAAe,cAErCkC,aAAenC,SAASC,eAAe,gBAEvCI,mBAAoB,EAEpBE,cAAe,EAEfQ,mBAAoB,CAuGxBf,UAASC,eAAe,gBAAgBmC,iBAAiB,QAAStB,YAGlEd,SAASC,eAAe,qBAAqBmC,iBAAiB,QAASlB,iBAGvElB,SAASC,eAAe,qBAAqBmC,iBAAiB,QAASjB,iBAUvEnB,SAASC,eAAe,gBAAgBmC,iBAAiB,QAASL,aAGlE/B,SAASoC,iBAAiB,QAAStC,cACnCE,SAASoC,iBAAiB,QAASjC,cACnCH,SAASoC,iBAAiB,QAASpB,gBACnChB,SAASoC,iBAAiB,QAASnB,cACnCjB,SAASC,eAAe,cAAcmC,iBAAiB,QAAS1C","file":"app-min.js","sourcesContent":["$(document).foundation();\n\n\n// inputted words variable\nlet words = \"\";\n// word count variable\nlet count = 0;\n// goal variable\nlet goal = 0;\n// goal input\nlet goal_input = document.getElementById(\"unit-count\");\n// unit-counter\nlet unit_counter = document.getElementById(\"unit-counter\");\n// character count boolean\nlet countByCharacters = false;\n// word count boolean, true by default\nlet countByWords = true;\n// paragraph count boolean\nlet countByParagraphs = false;\n\n\n// gets goal number from input field\nfunction refreshGoal() {\n    goal = goal_input.valueAsNumber;\n}\n\n// gets inputted words form text area\nfunction refreshWords() {\n    words = document.getElementById(\"words-input\").value;\n}\n\n// refreshes word count\nfunction refreshCount() {\n    if (countByCharacters == true) {\n        count = characterCount(words);\n    } else if (countByWords == true) {\n        count = wordCount(words);\n    } else {\n        count = paragraphCount(words);\n    }\n}\n\n// word count\nfunction wordCount(s) {\n    s = s.replace(/(^\\s*)|(\\s*$)/gi, \"\"); //exclude  start and end white-space\n    s = s.replace(/[ ]{2,}/gi, \" \"); // 2 or more spaces to 1\n    s = s.replace(/\\n /, \"\\n\"); // exclude newline with a start spacing\n    if (words == \"\") {\n        return 0;\n    } else {\n        return s.split(' ').length;\n    }\n}\n\n// character count\nfunction characterCount(s) {\n    s = s.replace(/\\s/g, \"\");\n    return s.length;\n}\n\n// paragraph count\nfunction paragraphCount(s) {\n    s = s.replace(/\\n$/gm, '');\n    if (words == \"\") {\n        return 0;\n    } else {\n        return s.split(/\\n/).length;\n    }\n}\n\n// set count to words\nfunction setToWords() {\n    countByWords = true;\n    countByCharacters = false;\n    countByParagraphs = false;\n    // THIS IS WHERE YOU LEFT OFF\n    refreshCount();\n    refreshCounter();\n    goalMetAlert();\n}\n\n// set count to characters\nfunction setToCharacters() {\n    countByWords = false;\n    countByCharacters = true;\n    countByParagraphs = false;\n    // THIS IS WHERE YOU LEFT OFF\n    refreshCount();\n    refreshCounter();\n    goalMetAlert();\n}\n\n// set count to paragraphs\nfunction setToParagraphs() {\n    countByWords = false;\n    countByCharacters = false;\n    countByParagraphs = true;\n    // THIS IS WHERE YOU LEFT OFF\n    refreshCount();\n    refreshCounter();\n    goalMetAlert();\n}\n\n// checks to see if goal is met\nfunction isGoalMet() {\n    return (count >= goal);\n}\n\n// changes color of text when goal is met\nfunction goalMetAlert() {\n    if ((isGoalMet()) & (goal != 0)) {\n        console.log(\"Goal is met!\")\n        document.getElementById(\"words-input\").classList.add(\"green-border\");\n    } else {\n        document.getElementById(\"words-input\").classList.remove(\"green-border\");\n    }\n}\n\n\n\n// button click - set count to words\ndocument.getElementById(\"words-button\").addEventListener(\"click\", setToWords);\n\n// button click - set count to words\ndocument.getElementById(\"characters-button\").addEventListener(\"click\", setToCharacters);\n\n// button click - set count to words\ndocument.getElementById(\"paragraphs-button\").addEventListener(\"click\", setToParagraphs);\n\n\n\n// refresh displayed count\nfunction refreshCounter() {\n    document.getElementById(\"unit-counter\").innerHTML = `${count}/${goal}`;\n}\n\n// hide unit-counter\ndocument.getElementById(\"unit-counter\").addEventListener(\"click\", hideCounter);\n\n// refreshes values after input\ndocument.addEventListener(\"keyup\", refreshWords);\ndocument.addEventListener(\"keyup\", refreshCount);\ndocument.addEventListener(\"keyup\", refreshCounter);\ndocument.addEventListener(\"keyup\", goalMetAlert);\ndocument.getElementById(\"unit-count\").addEventListener(\"input\", refreshGoal);\n\n// hide method\nfunction hide() {\n    if (this.style.display = \"block\") {\n        this.style.display = \"none\";\n    } else this.style.display = \"block\";\n}\n\n// hides counter\nfunction hideCounter() {\n    if (this.classList.contains(\"unit-counter-hidden\")) {\n        this.classList.remove(\"unit-counter-hidden\");\n    } else this.classList.add(\"unit-counter-hidden\");\n}"]}