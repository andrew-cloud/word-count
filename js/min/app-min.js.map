{"version":3,"sources":["../app.js"],"names":["refreshGoal","goal","goal_input","valueAsNumber","refreshWords","words","document","getElementById","value","refreshCount","count","countByCharacters","characterCount","countByWords","wordCount","paragraphCount","s","replace","split","length","setToWords","countByParagraphs","refreshCounter","goalMetAlert","setToCharacters","setToParagraphs","isGoalMet","console","log","classList","remove","add","goalFirstClick","e","goalClicked","this","select","unitButtonActive","removeActiveUnitButton","contains","list","getElementsByClassName","i","innerHTML","hide","style","display","hideCounter","$","foundation","unit_counter","addEventListener"],"mappings":"YAwBA,SAASA,eACLC,KAAOC,WAAWC,cAItB,QAASC,gBACLC,MAAQC,SAASC,eAAe,eAAeC,MAInD,QAASC,gBAEDC,MADqB,GAArBC,kBACQC,eAAeP,OACA,GAAhBQ,aACCC,UAAUT,OAEVU,eAAeV,OAK/B,QAASS,WAAUE,GAIf,MAHAA,GAAIA,EAAEC,QAAQ,kBAAmB,IACjCD,EAAIA,EAAEC,QAAQ,YAAa,KAC3BD,EAAIA,EAAEC,QAAQ,MAAO,MACR,IAATZ,MACO,EAEAW,EAAEE,MAAM,KAAKC,OAK5B,QAASP,gBAAeI,GAEpB,MADAA,GAAIA,EAAEC,QAAQ,MAAO,IACdD,EAAEG,OAIb,QAASJ,gBAAeC,GAEpB,MADAA,GAAIA,EAAEC,QAAQ,QAAS,IACV,IAATZ,MACO,EAEAW,EAAEE,MAAM,MAAMC,OAK7B,QAASC,cACLP,cAAe,EACfF,mBAAoB,EACpBU,mBAAoB,EACpBZ,eACAa,iBACAC,eAIJ,QAASC,mBACLX,cAAe,EACfF,mBAAoB,EACpBU,mBAAoB,EACpBZ,eACAa,iBACAC,eAIJ,QAASE,mBACLZ,cAAe,EACfF,mBAAoB,EACpBU,mBAAoB,EACpBZ,eACAa,iBACAC,eAIJ,QAASG,aACL,MAAQhB,QAAST,KAIrB,QAASsB,gBACAG,YAAwB,GAARzB,MACjB0B,QAAQC,IAAI,gBAEZN,iBACAhB,SAASC,eAAe,aAAasB,UAAUC,OAAO,mBACtDxB,SAASC,eAAe,aAAasB,UAAUE,IAAI,mBAEtDT,iBACGhB,SAASC,eAAe,aAAasB,UAAUC,OAAO,iBACtDxB,SAASC,eAAe,aAAasB,UAAUE,IAAI,oBAI3D,QAASC,gBAAeC,GACJ,GAAfC,aACHC,KAAKC,SAENF,aAAc,EAKf,QAASG,oBACLC,yBACIH,KAAKN,UAAUU,SAAS,UACxBJ,KAAKN,UAAUC,OAAO,UACnBK,KAAKN,UAAUE,IAAI,UAI9B,QAASO,0BACL,GAAIE,GAAOlC,SAASmC,uBAAuB,UACvCC,CACJ,KAAKA,EAAI,EAAGA,EAAIF,EAAKrB,OAAQuB,IACzBF,EAAKE,GAAGb,UAAUC,OAAO,UAkBjC,QAASR,kBACLhB,SAASC,eAAe,gBAAgBoC,UAAejC,MAAvD,IAAgET,KAAhE,mFAsBJ,QAAS2C,SACDT,KAAKU,MAAMC,QAAU,SACrBX,KAAKU,MAAMC,QAAU,OAClBX,KAAKU,MAAMC,QAAU,QAIhC,QAASC,eACDZ,KAAKN,UAAUU,SAAS,uBACxBJ,KAAKN,UAAUC,OAAO,uBACnBK,KAAKN,UAAUE,IAAI,uBAlM9BiB,EAAE1C,UAAU2C,YAIZ,IAAI5C,OAAQ,GAERK,MAAQ,EAERT,KAAO,IAEPC,WAAaI,SAASC,eAAe,cAErC2C,aAAe5C,SAASC,eAAe,gBAEvCI,mBAAoB,EAEpBE,cAAe,EAEfQ,mBAAoB,EAEpBa,aAAc,CAkIlB5B,UAASC,eAAe,gBAAgB4C,iBAAiB,QAAS/B,YAGlEd,SAASC,eAAe,qBAAqB4C,iBAAiB,QAAS3B,iBAGvElB,SAASC,eAAe,qBAAqB4C,iBAAiB,QAAS1B,iBAUvEnB,SAASC,eAAe,gBAAgB4C,iBAAiB,QAASJ,aAGlEzC,SAAS6C,iBAAiB,QAAS/C,cACnCE,SAAS6C,iBAAiB,QAAS1C,cACnCH,SAAS6C,iBAAiB,QAAS7B,gBACnChB,SAAS6C,iBAAiB,QAAS5B,cACnCjB,SAASC,eAAe,cAAc4C,iBAAiB,QAASnD,aAGhEM,SAASC,eAAe,cAAc4C,iBAAiB,QAASnB,gBAGhE1B,SAASC,eAAe,qBAAqB4C,iBAAiB,QAASd,kBACvE/B,SAASC,eAAe,gBAAgB4C,iBAAiB,QAASd,kBAClE/B,SAASC,eAAe,qBAAqB4C,iBAAiB,QAASd","file":"app-min.js","sourcesContent":["$(document).foundation();\n\n\n// inputted words variable\nlet words = \"\";\n// word count variable\nlet count = 0;\n// goal variable\nlet goal = 250;\n// goal input\nlet goal_input = document.getElementById(\"unit-count\");\n// unit-counter\nlet unit_counter = document.getElementById(\"unit-counter\");\n// character count boolean\nlet countByCharacters = false;\n// word count boolean, true by default\nlet countByWords = true;\n// paragraph count boolean\nlet countByParagraphs = false;\n// has the goal input been clicked before?\nlet goalClicked = false;\n\n\n// gets goal number from input field\nfunction refreshGoal() {\n    goal = goal_input.valueAsNumber;\n}\n\n// gets inputted words form text area\nfunction refreshWords() {\n    words = document.getElementById(\"words-input\").value;\n}\n\n// refreshes word count\nfunction refreshCount() {\n    if (countByCharacters == true) {\n        count = characterCount(words);\n    } else if (countByWords == true) {\n        count = wordCount(words);\n    } else {\n        count = paragraphCount(words);\n    }\n}\n\n// word count\nfunction wordCount(s) {\n    s = s.replace(/(^\\s*)|(\\s*$)/gi, \"\"); //exclude  start and end white-space\n    s = s.replace(/[ ]{2,}/gi, \" \"); // 2 or more spaces to 1\n    s = s.replace(/\\n /, \"\\n\"); // exclude newline with a start spacing\n    if (words == \"\") {\n        return 0;\n    } else {\n        return s.split(' ').length;\n    }\n}\n\n// character count\nfunction characterCount(s) {\n    s = s.replace(/\\s/g, \"\");\n    return s.length;\n}\n\n// paragraph count\nfunction paragraphCount(s) {\n    s = s.replace(/\\n$/gm, '');\n    if (words == \"\") {\n        return 0;\n    } else {\n        return s.split(/\\n/).length;\n    }\n}\n\n// set count to words\nfunction setToWords() {\n    countByWords = true;\n    countByCharacters = false;\n    countByParagraphs = false;\n    refreshCount();\n    refreshCounter();\n    goalMetAlert();\n}\n\n// set count to characters\nfunction setToCharacters() {\n    countByWords = false;\n    countByCharacters = true;\n    countByParagraphs = false;\n    refreshCount();\n    refreshCounter();\n    goalMetAlert();\n}\n\n// set count to paragraphs\nfunction setToParagraphs() {\n    countByWords = false;\n    countByCharacters = false;\n    countByParagraphs = true;\n    refreshCount();\n    refreshCounter();\n    goalMetAlert();\n}\n\n// checks to see if goal is met\nfunction isGoalMet() {\n    return (count >= goal);\n}\n\n// changes color of text when goal is met\nfunction goalMetAlert() {\n    if ((isGoalMet()) & (goal != 0)) {\n        console.log(\"Goal is met!\")\n        // have to run refreshCounter because the inner html has to be refreshed\n        refreshCounter();\n        document.getElementById(\"checkmark\").classList.remove(\"checkmark-unmet\");\n        document.getElementById(\"checkmark\").classList.add(\"checkmark-met\");\n    } else {\n    \trefreshCounter();\n        document.getElementById(\"checkmark\").classList.remove(\"checkmark-met\");\n        document.getElementById(\"checkmark\").classList.add(\"checkmark-unmet\");\n    }\n}\n\nfunction goalFirstClick(e) {\n\tif (goalClicked == false) {\n\t\tthis.select();\n\t}\n\tgoalClicked = true;\n\t\n}\n\n// applies active class to unit buttons\nfunction unitButtonActive() {\n    removeActiveUnitButton();\n    if (this.classList.contains(\"active\")) {\n        this.classList.remove(\"active\");\n    } else this.classList.add(\"active\");\n}\n\n// remove active class from unit buttons\nfunction removeActiveUnitButton() {\n    var list = document.getElementsByClassName(\"active\");\n    var i;\n    for (i = 0; i < list.length; i++) {\n        list[i].classList.remove(\"active\");\n    }\n}\n\n\n\n// button click - set count to words\ndocument.getElementById(\"words-button\").addEventListener(\"click\", setToWords);\n\n// button click - set count to words\ndocument.getElementById(\"characters-button\").addEventListener(\"click\", setToCharacters);\n\n// button click - set count to words\ndocument.getElementById(\"paragraphs-button\").addEventListener(\"click\", setToParagraphs);\n\n\n\n// refresh displayed count\nfunction refreshCounter() {\n    document.getElementById(\"unit-counter\").innerHTML = `${count}/${goal} <i id=\"checkmark\" class=\"fas fa-check-circle unselectable checkmark-unmet\"></i>`;\n}\n\n// hide unit-counter\ndocument.getElementById(\"unit-counter\").addEventListener(\"click\", hideCounter);\n\n// refreshes values after input\ndocument.addEventListener(\"keyup\", refreshWords);\ndocument.addEventListener(\"keyup\", refreshCount);\ndocument.addEventListener(\"keyup\", refreshCounter);\ndocument.addEventListener(\"keyup\", goalMetAlert);\ndocument.getElementById(\"unit-count\").addEventListener(\"input\", refreshGoal);\n\n// add comment\ndocument.getElementById(\"unit-count\").addEventListener(\"click\", goalFirstClick);\n\n// adds active class to unit buttons\ndocument.getElementById(\"characters-button\").addEventListener(\"click\", unitButtonActive);\ndocument.getElementById(\"words-button\").addEventListener(\"click\", unitButtonActive);\ndocument.getElementById(\"paragraphs-button\").addEventListener(\"click\", unitButtonActive);\n\n// hide method\nfunction hide() {\n    if (this.style.display = \"block\") {\n        this.style.display = \"none\";\n    } else this.style.display = \"block\";\n}\n\n// hides counter\nfunction hideCounter() {\n    if (this.classList.contains(\"unit-counter-hidden\")) {\n        this.classList.remove(\"unit-counter-hidden\");\n    } else this.classList.add(\"unit-counter-hidden\");\n}"]}